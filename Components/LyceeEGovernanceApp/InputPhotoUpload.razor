@using Microsoft.AspNetCore.Components.Forms

<div class="d-flex justify-content-between image_input_div">
    <div class="d-flex justify-content-start">
        <div class="image_label">
            <label>@Label</label>
        </div>

        <div class="image_input">
            @* <InputFile class="form-input" OnChange="OnInputValueChanged" id="@Id" accept=".png, .jpg" /> *@
            <InputFile OnChange="@OnChangeEvent" class="uploadImage" accept=".png, .jpg,.jpeg" readonly="@isReadOnly"
                MaxFileSize="10485760" />
        </div>
    </div>

    <div class="d-flex justify-content-end image_content">
        <img src="@UserPhotoDisplay" alt="@AlternateName" />
    </div>
</div>

@code {

    [Parameter]
    public EventCallback<InputFileChangeEventArgs> OnChangeEvent { get; set; }

    [Parameter]
    public bool isReadOnly { get; set; }
    [Parameter]
    public string UserPhotoDisplay { get; set; }

    [Parameter]
    public string Label { get; set; }

    [Parameter]
    public string AlternateName { get; set; }

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public EventCallback<string> ImageSelected { get; set; }

    private string SelectedImageBase64 { get; set; }

    @* private async Task OnInputValueChanged(InputFileChangeEventArgs e)
{
var file = e.File;

if (file != null)
{
var buffer = new byte[file.Size];
await file.OpenReadStream().ReadAsync(buffer);
SelectedImageBase64 = Convert.ToBase64String(buffer);
await ImageSelected.InvokeAsync(SelectedImageBase64);
}
} *@
}
